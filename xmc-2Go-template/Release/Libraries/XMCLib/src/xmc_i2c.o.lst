   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,4
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_i2c.c"
  14              	 .section .text.XMC_I2C_CH_SetSlaveAddress,"ax",%progbits
  15              	 .align 1
  16              	 .global XMC_I2C_CH_SetSlaveAddress
  17              	 .code 16
  18              	 .thumb_func
  20              	XMC_I2C_CH_SetSlaveAddress:
  21 0000 F823     	 mov r3,#248
  22 0002 F022     	 mov r2,#240
  23 0004 DB01     	 lsl r3,r3,#7
  24 0006 0B40     	 and r3,r1
  25 0008 D201     	 lsl r2,r2,#7
  26 000a 9342     	 cmp r3,r2
  27 000c 07D1     	 bne .L2
  28 000e FE23     	 mov r3,#254
  29 0010 4A00     	 lsl r2,r1,#1
  30 0012 1B02     	 lsl r3,r3,#8
  31 0014 1A40     	 and r2,r3
  32 0016 CBB2     	 uxtb r3,r1
  33 0018 1A43     	 orr r2,r3
  34 001a 111C     	 mov r1,r2
  35 001c 00E0     	 b .L4
  36              	.L2:
  37 001e 0902     	 lsl r1,r1,#8
  38              	.L4:
  39 0020 C163     	 str r1,[r0,#60]
  40              	 
  41 0022 7047     	 bx lr
  43              	 .section .text.XMC_I2C_CH_GetSlaveAddress,"ax",%progbits
  44              	 .align 1
  45              	 .global XMC_I2C_CH_GetSlaveAddress
  46              	 .code 16
  47              	 .thumb_func
  49              	XMC_I2C_CH_GetSlaveAddress:
  50 0000 C36B     	 ldr r3,[r0,#60]
  51 0002 1804     	 lsl r0,r3,#16
  52 0004 DBB2     	 uxtb r3,r3
  53 0006 002B     	 cmp r3,#0
  54 0008 01D1     	 bne .L7
  55 000a 000E     	 lsr r0,r0,#24
  56 000c 04E0     	 b .L8
  57              	.L7:
  58 000e C022     	 mov r2,#192
  59 0010 400C     	 lsr r0,r0,#17
  60 0012 9200     	 lsl r2,r2,#2
  61 0014 1040     	 and r0,r2
  62 0016 1843     	 orr r0,r3
  63              	.L8:
  64 0018 80B2     	 uxth r0,r0
  65              	 
  66 001a 7047     	 bx lr
  68              	 .section .text.XMC_I2C_CH_SetBaudrate,"ax",%progbits
  69              	 .align 1
  70              	 .global XMC_I2C_CH_SetBaudrate
  71              	 .code 16
  72              	 .thumb_func
  74              	XMC_I2C_CH_SetBaudrate:
  75 0000 08B5     	 push {r3,lr}
  76 0002 0D4B     	 ldr r3,.L14
  77 0004 9942     	 cmp r1,r3
  78 0006 05D8     	 bhi .L10
  79 0008 C26B     	 ldr r2,[r0,#60]
  80 000a 0C4B     	 ldr r3,.L14+4
  81 000c 1340     	 and r3,r2
  82 000e C363     	 str r3,[r0,#60]
  83 0010 0A22     	 mov r2,#10
  84 0012 09E0     	 b .L13
  85              	.L10:
  86 0014 0A4A     	 ldr r2,.L14+8
  87 0016 0123     	 mov r3,#1
  88 0018 9142     	 cmp r1,r2
  89 001a 0AD8     	 bhi .L11
  90 001c 8022     	 mov r2,#128
  91 001e C36B     	 ldr r3,[r0,#60]
  92 0020 9202     	 lsl r2,r2,#10
  93 0022 1343     	 orr r3,r2
  94 0024 1922     	 mov r2,#25
  95 0026 C363     	 str r3,[r0,#60]
  96              	.L13:
  97 0028 FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
  98 002c 431E     	 sub r3,r0,#1
  99 002e 9841     	 sbc r0,r0,r3
 100 0030 C3B2     	 uxtb r3,r0
 101              	.L11:
 102 0032 181C     	 mov r0,r3
 103              	 
 104 0034 08BD     	 pop {r3,pc}
 105              	.L15:
 106 0036 C046     	 .align 2
 107              	.L14:
 108 0038 A0860100 	 .word 100000
 109 003c FFFFFDFF 	 .word -131073
 110 0040 801A0600 	 .word 400000
 112              	 .section .text.XMC_I2C_CH_Init,"ax",%progbits
 113              	 .align 1
 114              	 .global XMC_I2C_CH_Init
 115              	 .code 16
 116              	 .thumb_func
 118              	XMC_I2C_CH_Init:
 119 0000 38B5     	 push {r3,r4,r5,lr}
 120 0002 041C     	 mov r4,r0
 121 0004 0D1C     	 mov r5,r1
 122 0006 FFF7FEFF 	 bl XMC_USIC_CH_Enable
 123 000a 094B     	 ldr r3,.L17
 124 000c 201C     	 mov r0,r4
 125 000e 6363     	 str r3,[r4,#52]
 126 0010 A988     	 ldrh r1,[r5,#4]
 127 0012 FFF7FEFF 	 bl XMC_I2C_CH_SetSlaveAddress
 128 0016 2968     	 ldr r1,[r5]
 129 0018 201C     	 mov r0,r4
 130 001a FFF7FEFF 	 bl XMC_I2C_CH_SetBaudrate
 131 001e A023     	 mov r3,#160
 132 0020 DB00     	 lsl r3,r3,#3
 133 0022 A363     	 str r3,[r4,#56]
 134 0024 0123     	 mov r3,#1
 135 0026 5B42     	 neg r3,r3
 136 0028 E364     	 str r3,[r4,#76]
 137 002a 0023     	 mov r3,#0
 138              	 
 139 002c 2364     	 str r3,[r4,#64]
 140 002e 38BD     	 pop {r3,r4,r5,pc}
 141              	.L18:
 142              	 .align 2
 143              	.L17:
 144 0030 03033F07 	 .word 121570051
 146              	 .section .text.XMC_I2C_CH_MasterStart,"ax",%progbits
 147              	 .align 1
 148              	 .global XMC_I2C_CH_MasterStart
 149              	 .code 16
 150              	 .thumb_func
 152              	XMC_I2C_CH_MasterStart:
 153 0000 012A     	 cmp r2,#1
 154 0002 02D0     	 beq .L20
 155 0004 8023     	 mov r3,#128
 156 0006 DB00     	 lsl r3,r3,#3
 157 0008 00E0     	 b .L26
 158              	.L20:
 159 000a 0D4B     	 ldr r3,.L27
 160              	.L26:
 161 000c 1943     	 orr r1,r3
 162 000e 031C     	 mov r3,r0
 163 0010 FC33     	 add r3,r3,#252
 164 0012 DA68     	 ldr r2,[r3,#12]
 165 0014 E023     	 mov r3,#224
 166 0016 DB04     	 lsl r3,r3,#19
 167 0018 1A42     	 tst r2,r3
 168 001a 0DD1     	 bne .L22
 169              	.L23:
 170 001c 7F22     	 mov r2,#127
 171 001e 836B     	 ldr r3,[r0,#56]
 172 0020 9343     	 bic r3,r2
 173 0022 DBB2     	 uxtb r3,r3
 174 0024 802B     	 cmp r3,#128
 175 0026 F9D0     	 beq .L23
 176 0028 8022     	 mov r2,#128
 177 002a C36C     	 ldr r3,[r0,#76]
 178 002c 9201     	 lsl r2,r2,#6
 179 002e 1343     	 orr r3,r2
 180 0030 C364     	 str r3,[r0,#76]
 181 0032 0430     	 add r0,r0,#4
 182 0034 C167     	 str r1,[r0,#124]
 183 0036 02E0     	 b .L19
 184              	.L22:
 185 0038 C023     	 mov r3,#192
 186 003a 5B00     	 lsl r3,r3,#1
 187 003c C150     	 str r1,[r0,r3]
 188              	.L19:
 189              	 
 190 003e 7047     	 bx lr
 191              	.L28:
 192              	 .align 2
 193              	.L27:
 194 0040 01040000 	 .word 1025
 196              	 .section .text.XMC_I2C_CH_MasterRepeatedStart,"ax",%progbits
 197              	 .align 1
 198              	 .global XMC_I2C_CH_MasterRepeatedStart
 199              	 .code 16
 200              	 .thumb_func
 202              	XMC_I2C_CH_MasterRepeatedStart:
 203 0000 012A     	 cmp r2,#1
 204 0002 02D0     	 beq .L30
 205 0004 A023     	 mov r3,#160
 206 0006 DB00     	 lsl r3,r3,#3
 207 0008 00E0     	 b .L36
 208              	.L30:
 209 000a 0D4B     	 ldr r3,.L37
 210              	.L36:
 211 000c 1943     	 orr r1,r3
 212 000e 031C     	 mov r3,r0
 213 0010 FC33     	 add r3,r3,#252
 214 0012 DA68     	 ldr r2,[r3,#12]
 215 0014 E023     	 mov r3,#224
 216 0016 DB04     	 lsl r3,r3,#19
 217 0018 1A42     	 tst r2,r3
 218 001a 0DD1     	 bne .L32
 219              	.L33:
 220 001c 7F22     	 mov r2,#127
 221 001e 836B     	 ldr r3,[r0,#56]
 222 0020 9343     	 bic r3,r2
 223 0022 DBB2     	 uxtb r3,r3
 224 0024 802B     	 cmp r3,#128
 225 0026 F9D0     	 beq .L33
 226 0028 8022     	 mov r2,#128
 227 002a C36C     	 ldr r3,[r0,#76]
 228 002c 9201     	 lsl r2,r2,#6
 229 002e 1343     	 orr r3,r2
 230 0030 C364     	 str r3,[r0,#76]
 231 0032 0430     	 add r0,r0,#4
 232 0034 C167     	 str r1,[r0,#124]
 233 0036 02E0     	 b .L29
 234              	.L32:
 235 0038 C023     	 mov r3,#192
 236 003a 5B00     	 lsl r3,r3,#1
 237 003c C150     	 str r1,[r0,r3]
 238              	.L29:
 239              	 
 240 003e 7047     	 bx lr
 241              	.L38:
 242              	 .align 2
 243              	.L37:
 244 0040 01050000 	 .word 1281
 246              	 .section .text.XMC_I2C_CH_MasterStop,"ax",%progbits
 247              	 .align 1
 248              	 .global XMC_I2C_CH_MasterStop
 249              	 .code 16
 250              	 .thumb_func
 252              	XMC_I2C_CH_MasterStop:
 253 0000 031C     	 mov r3,r0
 254 0002 FC33     	 add r3,r3,#252
 255 0004 DA68     	 ldr r2,[r3,#12]
 256 0006 E023     	 mov r3,#224
 257 0008 DB04     	 lsl r3,r3,#19
 258 000a 1A42     	 tst r2,r3
 259 000c 0FD1     	 bne .L40
 260              	.L41:
 261 000e 7F22     	 mov r2,#127
 262 0010 836B     	 ldr r3,[r0,#56]
 263 0012 9343     	 bic r3,r2
 264 0014 DBB2     	 uxtb r3,r3
 265 0016 802B     	 cmp r3,#128
 266 0018 F9D0     	 beq .L41
 267 001a 8022     	 mov r2,#128
 268 001c C36C     	 ldr r3,[r0,#76]
 269 001e 9201     	 lsl r2,r2,#6
 270 0020 1343     	 orr r3,r2
 271 0022 C364     	 str r3,[r0,#76]
 272 0024 C023     	 mov r3,#192
 273 0026 0430     	 add r0,r0,#4
 274 0028 DB00     	 lsl r3,r3,#3
 275 002a C367     	 str r3,[r0,#124]
 276 002c 04E0     	 b .L39
 277              	.L40:
 278 002e C022     	 mov r2,#192
 279 0030 C023     	 mov r3,#192
 280 0032 D200     	 lsl r2,r2,#3
 281 0034 5B00     	 lsl r3,r3,#1
 282 0036 C250     	 str r2,[r0,r3]
 283              	.L39:
 284              	 
 285 0038 7047     	 bx lr
 287              	 .section .text.XMC_I2C_CH_MasterTransmit,"ax",%progbits
 288              	 .align 1
 289              	 .global XMC_I2C_CH_MasterTransmit
 290              	 .code 16
 291              	 .thumb_func
 293              	XMC_I2C_CH_MasterTransmit:
 294 0000 031C     	 mov r3,r0
 295 0002 FC33     	 add r3,r3,#252
 296 0004 DA68     	 ldr r2,[r3,#12]
 297 0006 E023     	 mov r3,#224
 298 0008 DB04     	 lsl r3,r3,#19
 299 000a 1A42     	 tst r2,r3
 300 000c 0DD1     	 bne .L45
 301              	.L46:
 302 000e 7F22     	 mov r2,#127
 303 0010 836B     	 ldr r3,[r0,#56]
 304 0012 9343     	 bic r3,r2
 305 0014 DBB2     	 uxtb r3,r3
 306 0016 802B     	 cmp r3,#128
 307 0018 F9D0     	 beq .L46
 308 001a 8022     	 mov r2,#128
 309 001c C36C     	 ldr r3,[r0,#76]
 310 001e 9201     	 lsl r2,r2,#6
 311 0020 1343     	 orr r3,r2
 312 0022 C364     	 str r3,[r0,#76]
 313 0024 0430     	 add r0,r0,#4
 314 0026 C167     	 str r1,[r0,#124]
 315 0028 02E0     	 b .L44
 316              	.L45:
 317 002a C023     	 mov r3,#192
 318 002c 5B00     	 lsl r3,r3,#1
 319 002e C150     	 str r1,[r0,r3]
 320              	.L44:
 321              	 
 322 0030 7047     	 bx lr
 324              	 .section .text.XMC_I2C_CH_SlaveTransmit,"ax",%progbits
 325              	 .align 1
 326              	 .global XMC_I2C_CH_SlaveTransmit
 327              	 .code 16
 328              	 .thumb_func
 330              	XMC_I2C_CH_SlaveTransmit:
 331 0000 031C     	 mov r3,r0
 332 0002 FC33     	 add r3,r3,#252
 333 0004 DA68     	 ldr r2,[r3,#12]
 334 0006 E023     	 mov r3,#224
 335 0008 DB04     	 lsl r3,r3,#19
 336 000a 1A42     	 tst r2,r3
 337 000c 10D1     	 bne .L50
 338              	.L51:
 339 000e 7F22     	 mov r2,#127
 340 0010 836B     	 ldr r3,[r0,#56]
 341 0012 9343     	 bic r3,r2
 342 0014 DBB2     	 uxtb r3,r3
 343 0016 802B     	 cmp r3,#128
 344 0018 F9D0     	 beq .L51
 345 001a 8022     	 mov r2,#128
 346 001c C36C     	 ldr r3,[r0,#76]
 347 001e 9201     	 lsl r2,r2,#6
 348 0020 1343     	 orr r3,r2
 349 0022 C364     	 str r3,[r0,#76]
 350 0024 8023     	 mov r3,#128
 351 0026 5B00     	 lsl r3,r3,#1
 352 0028 1943     	 orr r1,r3
 353 002a 0430     	 add r0,r0,#4
 354 002c C167     	 str r1,[r0,#124]
 355 002e 04E0     	 b .L49
 356              	.L50:
 357 0030 8023     	 mov r3,#128
 358 0032 5B00     	 lsl r3,r3,#1
 359 0034 1943     	 orr r1,r3
 360 0036 8033     	 add r3,r3,#128
 361 0038 C150     	 str r1,[r0,r3]
 362              	.L49:
 363              	 
 364 003a 7047     	 bx lr
 366              	 .section .text.XMC_I2C_CH_MasterReceiveAck,"ax",%progbits
 367              	 .align 1
 368              	 .global XMC_I2C_CH_MasterReceiveAck
 369              	 .code 16
 370              	 .thumb_func
 372              	XMC_I2C_CH_MasterReceiveAck:
 373 0000 031C     	 mov r3,r0
 374 0002 FC33     	 add r3,r3,#252
 375 0004 DA68     	 ldr r2,[r3,#12]
 376 0006 E023     	 mov r3,#224
 377 0008 DB04     	 lsl r3,r3,#19
 378 000a 1A42     	 tst r2,r3
 379 000c 0FD1     	 bne .L55
 380              	.L56:
 381 000e 7F22     	 mov r2,#127
 382 0010 836B     	 ldr r3,[r0,#56]
 383 0012 9343     	 bic r3,r2
 384 0014 DBB2     	 uxtb r3,r3
 385 0016 802B     	 cmp r3,#128
 386 0018 F9D0     	 beq .L56
 387 001a 8022     	 mov r2,#128
 388 001c C36C     	 ldr r3,[r0,#76]
 389 001e 9201     	 lsl r2,r2,#6
 390 0020 1343     	 orr r3,r2
 391 0022 C364     	 str r3,[r0,#76]
 392 0024 8023     	 mov r3,#128
 393 0026 0430     	 add r0,r0,#4
 394 0028 9B00     	 lsl r3,r3,#2
 395 002a C367     	 str r3,[r0,#124]
 396 002c 04E0     	 b .L54
 397              	.L55:
 398 002e 8022     	 mov r2,#128
 399 0030 C023     	 mov r3,#192
 400 0032 9200     	 lsl r2,r2,#2
 401 0034 5B00     	 lsl r3,r3,#1
 402 0036 C250     	 str r2,[r0,r3]
 403              	.L54:
 404              	 
 405 0038 7047     	 bx lr
 407              	 .section .text.XMC_I2C_CH_MasterReceiveNack,"ax",%progbits
 408              	 .align 1
 409              	 .global XMC_I2C_CH_MasterReceiveNack
 410              	 .code 16
 411              	 .thumb_func
 413              	XMC_I2C_CH_MasterReceiveNack:
 414 0000 031C     	 mov r3,r0
 415 0002 FC33     	 add r3,r3,#252
 416 0004 DA68     	 ldr r2,[r3,#12]
 417 0006 E023     	 mov r3,#224
 418 0008 DB04     	 lsl r3,r3,#19
 419 000a 1A42     	 tst r2,r3
 420 000c 0FD1     	 bne .L60
 421              	.L61:
 422 000e 7F22     	 mov r2,#127
 423 0010 836B     	 ldr r3,[r0,#56]
 424 0012 9343     	 bic r3,r2
 425 0014 DBB2     	 uxtb r3,r3
 426 0016 802B     	 cmp r3,#128
 427 0018 F9D0     	 beq .L61
 428 001a 8022     	 mov r2,#128
 429 001c C36C     	 ldr r3,[r0,#76]
 430 001e 9201     	 lsl r2,r2,#6
 431 0020 1343     	 orr r3,r2
 432 0022 C364     	 str r3,[r0,#76]
 433 0024 C023     	 mov r3,#192
 434 0026 0430     	 add r0,r0,#4
 435 0028 9B00     	 lsl r3,r3,#2
 436 002a C367     	 str r3,[r0,#124]
 437 002c 04E0     	 b .L59
 438              	.L60:
 439 002e C022     	 mov r2,#192
 440 0030 C023     	 mov r3,#192
 441 0032 9200     	 lsl r2,r2,#2
 442 0034 5B00     	 lsl r3,r3,#1
 443 0036 C250     	 str r2,[r0,r3]
 444              	.L59:
 445              	 
 446 0038 7047     	 bx lr
 448              	 .section .text.XMC_I2C_CH_GetReceivedData,"ax",%progbits
 449              	 .align 1
 450              	 .global XMC_I2C_CH_GetReceivedData
 451              	 .code 16
 452              	 .thumb_func
 454              	XMC_I2C_CH_GetReceivedData:
 455 0000 031C     	 mov r3,r0
 456 0002 E022     	 mov r2,#224
 457 0004 FC33     	 add r3,r3,#252
 458 0006 1969     	 ldr r1,[r3,#16]
 459 0008 D204     	 lsl r2,r2,#19
 460 000a 1142     	 tst r1,r2
 461 000c 01D1     	 bne .L65
 462 000e 406D     	 ldr r0,[r0,#84]
 463 0010 00E0     	 b .L67
 464              	.L65:
 465 0012 186A     	 ldr r0,[r3,#32]
 466              	.L67:
 467 0014 C0B2     	 uxtb r0,r0
 468              	 
 469 0016 7047     	 bx lr
 471              	 .section .text.XMC_I2C_CH_Stop,"ax",%progbits
 472              	 .align 1
 473              	 .global XMC_I2C_CH_Stop
 474              	 .code 16
 475              	 .thumb_func
 477              	XMC_I2C_CH_Stop:
 478 0000 826B     	 ldr r2,[r0,#56]
 479 0002 031C     	 mov r3,r0
 480 0004 0220     	 mov r0,#2
 481 0006 1206     	 lsl r2,r2,#24
 482 0008 04D4     	 bmi .L69
 483 000a 0F21     	 mov r1,#15
 484 000c 0020     	 mov r0,#0
 485 000e 1A6C     	 ldr r2,[r3,#64]
 486 0010 8A43     	 bic r2,r1
 487 0012 1A64     	 str r2,[r3,#64]
 488              	.L69:
 489              	 
 490 0014 7047     	 bx lr
 492              	 .section .text.XMC_I2C_CH_EnableEvent,"ax",%progbits
 493              	 .align 1
 494              	 .global XMC_I2C_CH_EnableEvent
 495              	 .code 16
 496              	 .thumb_func
 498              	XMC_I2C_CH_EnableEvent:
 499 0000 FE23     	 mov r3,#254
 500 0002 026C     	 ldr r2,[r0,#64]
 501 0004 5B02     	 lsl r3,r3,#9
 502 0006 0B40     	 and r3,r1
 503 0008 1343     	 orr r3,r2
 504 000a 0364     	 str r3,[r0,#64]
 505 000c 024A     	 ldr r2,.L72
 506 000e C36B     	 ldr r3,[r0,#60]
 507 0010 1140     	 and r1,r2
 508 0012 1943     	 orr r1,r3
 509 0014 C163     	 str r1,[r0,#60]
 510              	 
 511 0016 7047     	 bx lr
 512              	.L73:
 513              	 .align 2
 514              	.L72:
 515 0018 0000FC41 	 .word 1107034112
 517              	 .section .text.XMC_I2C_CH_DisableEvent,"ax",%progbits
 518              	 .align 1
 519              	 .global XMC_I2C_CH_DisableEvent
 520              	 .code 16
 521              	 .thumb_func
 523              	XMC_I2C_CH_DisableEvent:
 524 0000 FE22     	 mov r2,#254
 525 0002 036C     	 ldr r3,[r0,#64]
 526 0004 5202     	 lsl r2,r2,#9
 527 0006 0A40     	 and r2,r1
 528 0008 9343     	 bic r3,r2
 529 000a 0364     	 str r3,[r0,#64]
 530 000c 024A     	 ldr r2,.L75
 531 000e C36B     	 ldr r3,[r0,#60]
 532 0010 1140     	 and r1,r2
 533 0012 8B43     	 bic r3,r1
 534 0014 C363     	 str r3,[r0,#60]
 535              	 
 536 0016 7047     	 bx lr
 537              	.L76:
 538              	 .align 2
 539              	.L75:
 540 0018 0000FC41 	 .word 1107034112
 542              	 .ident "GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20141119 (release) [ARM/embedded-4_9-branch revision 218278]"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_i2c.c
    {standard input}:15     .text.XMC_I2C_CH_SetSlaveAddress:00000000 $t
    {standard input}:20     .text.XMC_I2C_CH_SetSlaveAddress:00000000 XMC_I2C_CH_SetSlaveAddress
    {standard input}:44     .text.XMC_I2C_CH_GetSlaveAddress:00000000 $t
    {standard input}:49     .text.XMC_I2C_CH_GetSlaveAddress:00000000 XMC_I2C_CH_GetSlaveAddress
    {standard input}:69     .text.XMC_I2C_CH_SetBaudrate:00000000 $t
    {standard input}:74     .text.XMC_I2C_CH_SetBaudrate:00000000 XMC_I2C_CH_SetBaudrate
    {standard input}:108    .text.XMC_I2C_CH_SetBaudrate:00000038 $d
    {standard input}:113    .text.XMC_I2C_CH_Init:00000000 $t
    {standard input}:118    .text.XMC_I2C_CH_Init:00000000 XMC_I2C_CH_Init
    {standard input}:144    .text.XMC_I2C_CH_Init:00000030 $d
    {standard input}:147    .text.XMC_I2C_CH_MasterStart:00000000 $t
    {standard input}:152    .text.XMC_I2C_CH_MasterStart:00000000 XMC_I2C_CH_MasterStart
    {standard input}:194    .text.XMC_I2C_CH_MasterStart:00000040 $d
    {standard input}:197    .text.XMC_I2C_CH_MasterRepeatedStart:00000000 $t
    {standard input}:202    .text.XMC_I2C_CH_MasterRepeatedStart:00000000 XMC_I2C_CH_MasterRepeatedStart
    {standard input}:244    .text.XMC_I2C_CH_MasterRepeatedStart:00000040 $d
    {standard input}:247    .text.XMC_I2C_CH_MasterStop:00000000 $t
    {standard input}:252    .text.XMC_I2C_CH_MasterStop:00000000 XMC_I2C_CH_MasterStop
    {standard input}:288    .text.XMC_I2C_CH_MasterTransmit:00000000 $t
    {standard input}:293    .text.XMC_I2C_CH_MasterTransmit:00000000 XMC_I2C_CH_MasterTransmit
    {standard input}:325    .text.XMC_I2C_CH_SlaveTransmit:00000000 $t
    {standard input}:330    .text.XMC_I2C_CH_SlaveTransmit:00000000 XMC_I2C_CH_SlaveTransmit
    {standard input}:367    .text.XMC_I2C_CH_MasterReceiveAck:00000000 $t
    {standard input}:372    .text.XMC_I2C_CH_MasterReceiveAck:00000000 XMC_I2C_CH_MasterReceiveAck
    {standard input}:408    .text.XMC_I2C_CH_MasterReceiveNack:00000000 $t
    {standard input}:413    .text.XMC_I2C_CH_MasterReceiveNack:00000000 XMC_I2C_CH_MasterReceiveNack
    {standard input}:449    .text.XMC_I2C_CH_GetReceivedData:00000000 $t
    {standard input}:454    .text.XMC_I2C_CH_GetReceivedData:00000000 XMC_I2C_CH_GetReceivedData
    {standard input}:472    .text.XMC_I2C_CH_Stop:00000000 $t
    {standard input}:477    .text.XMC_I2C_CH_Stop:00000000 XMC_I2C_CH_Stop
    {standard input}:493    .text.XMC_I2C_CH_EnableEvent:00000000 $t
    {standard input}:498    .text.XMC_I2C_CH_EnableEvent:00000000 XMC_I2C_CH_EnableEvent
    {standard input}:515    .text.XMC_I2C_CH_EnableEvent:00000018 $d
    {standard input}:518    .text.XMC_I2C_CH_DisableEvent:00000000 $t
    {standard input}:523    .text.XMC_I2C_CH_DisableEvent:00000000 XMC_I2C_CH_DisableEvent
    {standard input}:540    .text.XMC_I2C_CH_DisableEvent:00000018 $d

UNDEFINED SYMBOLS
XMC_USIC_CH_SetBaudrate
XMC_USIC_CH_Enable
